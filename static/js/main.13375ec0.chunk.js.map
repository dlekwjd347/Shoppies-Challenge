{"version":3,"sources":["components/NominateBtn.js","components/MovieResults.js","components/ShoppiesHeading.js","components/NomHeading.js","components/SearchBox.js","components/RemoveBtn.js","components/AllNominatedMovies.js","components/Banner.js","components/Toggle.js","App.js","redux/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["connect","state","selectedMovie","dispatch","props","index","movie","i","length","imdbID","linearSearch","console","log","type","id","className","onClick","payload","alert","disabled","MovieResults","movies","map","src","Poster","alt","Title","Year","ShoppiesHeading","heading","NomHeading","SearchBox","xmlns","width","height","fill","viewBox","d","value","onChange","event","setSearchValue","target","placeholder","Toggle","React","useState","isReturningUser","localStorage","savedMode","JSON","parse","getItem","userPrefersDark","window","matchMedia","matches","getPrefColorScheme","getInitialMode","toggled","useEffect","setItem","stringify","App","setMovies","searchValue","nominees","setNominees","setToggle","getMovieRequest","a","url","fetch","response","json","responseJson","Search","movieNominations","style","color","class","for","checked","prevMode","name","handlenominateClick","newNominatedList","NominateBtnComponent","NominateBtn","RemoveBtnComponent","RemoveBtn","initialState","reducer","action","selectedMovieCopy","_","remove","store","createStore","composeWithDevTools","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13375ec0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction NominateBtn(props) {\r\n    // console.log(\"nominate button is clicked!\", props.movieTitle);\r\n    //linear seach to determine if target is in selectedMovies array \r\n    function linearSearch(selectedMovie, movie) {\r\n        for (let i = 0; i < selectedMovie.length; i++) {\r\n            if (selectedMovie[i].imdbID === movie.imdbID) {\r\n                // found\r\n                return i;\r\n            }\r\n        } // went through all the list, not found\r\n        return -1;\r\n    }\r\n\r\n    const index = linearSearch(props.selectedMovie, props.movie);\r\n    console.log(index)\r\n    return (\r\n        <div>\r\n            <button type=\"button\" id=\"nomBtn\" className=\"btn btn-light nominateBtn\"\r\n                onClick={() => {\r\n                    if (index === -1) { //if search is unsuccessful \r\n                        props.dispatch({\r\n                            type: \"NOM_MOVIE\", //allow nominate movie button clickable\r\n                            payload: props.movie\r\n                        });\r\n                    }\r\n                    return alert(\"Movie has been nominated!\");\r\n                }\r\n                } disabled={index !== -1 || props.selectedMovie.length === 5}>NOMINATE</button>\r\n        </div>\r\n    )\r\n};\r\n\r\n// state : redux state (how you access the GLOBAL state at the component level)\r\n//called every time the store state changes. It receives the entire store state, and should return an object of data this component needs.\r\n//getState\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selectedMovie: state.selectedMovie\r\n    };\r\n};\r\n\r\n// dispatch: how you allow dispatch function to be performed at the component level\r\n//called once on component creation. It will receive dispatch as an argument, and should return an object full of functions that use dispatch to dispatch actions.\r\n//dispatch\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch: dispatch\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NominateBtn);","import React from 'react';\r\nimport NominateBtn from './NominateBtn';\r\n\r\n\r\nfunction MovieResults(props) {\r\n\treturn (\r\n\t\t<div className='resultsbody'>\r\n\t\t\t<div className=\"d-flex justify-content-left\">\r\n\t\t\t\t{props.movies.map((movie) => (\r\n\t\t\t\t\t<div className='row movieBox container-fluid '>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='image-container'>\r\n\t\t\t\t\t\t\t\t<img src={movie.Poster} alt='movie'></img>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t<div className='movieInfo'>\r\n\t\t\t\t\t\t\t\t<h4>{movie.Title}</h4>\r\n\t\t\t\t\t\t\t\t<p>{movie.Year}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='row btncenter'>\r\n\t\t\t\t\t\t\t\t{<NominateBtn movie={movie} />}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default MovieResults;","import React from 'react';\r\n\r\nfunction ShoppiesHeading (props) {\r\n\treturn (\r\n\t\t<div className='col shoppiesHead'>\r\n\t\t\t<h1>{props.heading}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShoppiesHeading;","import React from 'react';\r\n\r\nfunction NomHeading (props) {\r\n\treturn (\r\n\t\t<div className='col nomHeading'>\r\n\t\t\t<h2>{props.heading}</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NomHeading;","import React from 'react';\r\n\r\nfunction SearchBox(props) {\r\n\treturn (\r\n\t\t<div className='col col-sm-4'>\r\n\t\t\t<label>\r\n\t\t\t\t<svg xmlns=\"https://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n\t\t\t\t\t<path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<input\r\n\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName='formControl'\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={(event) => props.setSearchValue(event.target.value)}\r\n\t\t\t\t\tplaceholder='Type to search...'\r\n\t\t\t\t></input>\r\n\t\t\t</label>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nfunction RemoveBtn(props) {\r\n    return (\r\n        <button type=\"button\" onClick={() => {\r\n            props.dispatch({\r\n                type: \"REM_MOVIE\",\r\n                payload: props.movie\r\n            });\r\n         \r\n        }}  className=\"btn removeBtn\">\r\n            Remove Nomination\r\n        </button>\r\n   \r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selectedMovie: state.selectedMovie,\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch: dispatch,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(RemoveBtn);","import React from 'react';\r\nimport RemoveBtn from './RemoveBtn';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction AllNominatedMovies(props) {\r\n  console.log(props.selectedMovie)\r\n    return (\r\n      \r\n        <div>\r\n\t\t\t{props.selectedMovie.map((movie) => (\r\n\t\t\t\t<div className='movieBox'>\r\n\t\t\t\t\t{/* <div className='row image-container d-flex justify-content-left m-4 col-4'>\r\n\t\t\t\t\t\t<img src={movie.Poster} alt='movie'></img>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t<div className = 'row'>\r\n\t\t\t\t\t\t<h4>{movie.Title}</h4>\r\n\t\t\t\t\t\t<p>{movie.Year}</p>\r\n            <div className='row'>\r\n            {<RemoveBtn movie={movie} />}\r\n            </div>\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t))}\t\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      selectedMovie: state.selectedMovie\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n      dispatch: dispatch\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(AllNominatedMovies);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Banner(props) {\r\n    if (props.selectedMovie.length === 5) {\r\n        return (\r\n            <div>\r\n                <p>You have 5 nominations</p>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selectedMovie: state.selectedMovie\r\n    };\r\n  };\r\n    \r\n  export default connect(\r\n    mapStateToProps\r\n  )(Banner);\r\n  ","import React from 'react';\r\n\r\nfunction Toggle() {\r\n\r\n    const [toggled, setToggle] = React.useState(getInitialMode());\r\n    React.useEffect(() => {\r\n\t\tlocalStorage.setItem(\"dark\", JSON.stringify(toggled));\r\n\t  }, [toggled]);\r\n\r\n    function getInitialMode() {\r\n        const isReturningUser = \"dark\" in localStorage;\r\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\r\n        const userPrefersDark = getPrefColorScheme();\r\n        // if mode was saved --> dark / light\r\n        if (isReturningUser) {\r\n          return savedMode;\r\n          // if preferred color scheme is dark --> dark\r\n        } else if (userPrefersDark) {\r\n          return true;\r\n          // otherwise --> light\r\n        } else {\r\n          return false;\r\n        }\r\n        // return savedMode || false;\r\n      }\r\n\r\n      function getPrefColorScheme() {\r\n        if (!window.matchMedia) return;\r\n    \r\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n      }\r\n    return (\r\n        <div className=\"\"></div>\r\n    )\r\n}\r\n\r\nexport default Toggle;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieResults from './components/MovieResults';\nimport ShoppiesHeading from './components/ShoppiesHeading';\nimport NomHeading from './components/NomHeading'\nimport SearchBox from './components/SearchBox';\nimport NominateBtn from './components/NominateBtn';\nimport RemoveBtn from './components/RemoveBtn';\nimport AllNominatedMovies from './components/AllNominatedMovies';\nimport Banner from './components/Banner';\nimport Toggle from './components/Toggle';\n\nfunction App() {\n\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [nominees, setNominees] = useState([]);\n\n\t\n    const [toggled, setToggle] = React.useState(getInitialMode());\n    React.useEffect(() => {\n\t\tlocalStorage.setItem(\"dark\", JSON.stringify(toggled));\n\t  }, [toggled]);\n\n\t  function getInitialMode() {\n        const isReturningUser = \"dark\" in localStorage;\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\n        const userPrefersDark = getPrefColorScheme();\n        // if mode was saved --> dark / light\n        if (isReturningUser) {\n          return savedMode;\n          // if preferred color scheme is dark --> dark\n        } else if (userPrefersDark) {\n          return true;\n          // otherwise --> light\n        } else {\n          return false;\n        }\n        // return savedMode || false;\n      }\n\n      function getPrefColorScheme() {\n        if (!window.matchMedia) return;\n    \n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n      }\n\n\tconst getMovieRequest = async (searchValue) => {\n\t\tconst url = `https://www.omdbapi.com/?s=${searchValue}&type=movie&apikey=762eb5d3`;\n\n\t\tconst response = await fetch(url);\n\t\tconst responseJson = await response.json();\n\n\t\tconsole.log(responseJson);\n\n\t\tif (responseJson.Search) {\n\t\t\tsetMovies(responseJson.Search);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetMovieRequest(searchValue);\n\t}, [searchValue]);\n\n\tuseEffect(() => {\n\t\tconst movieNominations = JSON.parse(\n\t\t\tlocalStorage.getItem('react-movie-app-nominees')\n\t\t);\n\n\t\tif (movieNominations) {\n\t\t\tsetNominees(movieNominations);\n\t\t}\n\t}, []);\n\n\tconst addNominatedMovie = (movie) => {\n\t\tconst newNominatedList = [...nominees, movie];\n\t\tsetNominees(newNominatedList);\n\n\t};\n\n\treturn (\n\n\n\n\t\t<div className={toggled ? \"dark-mode\" : \"light-mode\"}>\n\t\t\t<div className='container-fluid'>\n\t\t\t\t<div className=\"appToggle\">\n\t\t\t\t<span style={{ color: toggled ? \"grey\" : \"yellow\" }}>☀︎</span>\n\t\t\t<label class=\"label\" for=\"checkbox\">\n\t\t\t\t<div class=\"labelToggle\">\n\t\t\t\t\t<input\n              checked={toggled}\n              onChange={() => setToggle(prevMode => !prevMode)}\n              id=\"checkbox\"\n              className=\"toggle-state\"\n\t\t\t  type=\"checkbox\"\n\t\t\t  name=\"check\"\n\t\t\t  value=\"check\"\n            />\n\t\t\t<div className=\"indicator\"></div>\n\t\t\t</div>\n\t\t\t</label>\n            <span className=\"moonToggle\" style={{ color: toggled ? \"white\" : \"white\" }}>🌙</span>\n           \n\t\t\t\t</div>\n\t\t\n\t\t\t<div>\n\t\t\t\t<Toggle />\n\t\t\t</div>\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4 moviesHeading'>\n\t\t\t\t<ShoppiesHeading heading='THE SHOPPIES' />\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n\t\t\t\t<Banner />\n\t\t\t</div>\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t\t<div className='row'>\n\n\t\t\t\t<MovieResults\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\thandlenominateClick={addNominatedMovie}\n\t\t\t\t\tNominateBtnComponent={NominateBtn}\n\n\t\t\t\t/>\n\n\t\t\t</div>\n\t\t\t<div className='row d-flex mt-4 mb-4'>\n\t\t\t\t<MovieResults\n\t\t\t\t\tmovies={nominees}\n\t\t\t\t/>\n\t\t\t\t<div className='row d-flex mt-4 mb-4'>\n\t\t\t\t\t<NomHeading heading='Nominees' />\n\t\t\t\t\t<AllNominatedMovies\n\t\t\t\t\t\tRemoveBtnComponent={RemoveBtn} />\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t);\n\n}\n\nexport default App;\n","//function will determine changes to a movie's state\r\n//uses the action it receives to determine this change\r\n\r\nimport _ from 'lodash';\r\nconst initialState = {\r\n    selectedMovie: []\r\n};\r\n\r\n//reducer function will dispatch actions depending on case determined by case\r\nfunction reducer(state = initialState, action) {\r\n    console.log(\"Hi i m reducer\", action);\r\n    console.log(\"action.payload =\" + action.payload)\r\n    switch (action.type) {\r\n        case \"NOM_MOVIE\":\r\n            return { ...state, selectedMovie: [...state.selectedMovie, action.payload] };\r\n           \r\n        case \"REM_MOVIE\":\r\n            const selectedMovieCopy = [...state.selectedMovie]; \r\n            _.remove(selectedMovieCopy, function(movie) {\r\n                return movie.imdbID === action.payload.imdbID;\r\n            });\r\n            return { ...state, selectedMovie: selectedMovieCopy };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\n//make store available to app by wrapping app with <Provider /> API provided by React Redux\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}